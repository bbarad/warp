{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"Process your cryo-EM data. Fast.  <p>   Welcome to warpem.com, the home of Warp, M, and friends on the internet. </p>"},{"location":"papers/","title":"Papers","text":""},{"location":"papers/#warp","title":"Warp","text":"<p>Real-time cryo-electron microscopy data preprocessing with Warp</p>"},{"location":"papers/#m","title":"M","text":"<p>Multi-particle cryo-EM refinement with M visualizes ribosome-antibiotic complex at 3.5\u00c5 in cells</p>"},{"location":"team/","title":"Team","text":"<ul> <li> <p>Dimitry Tegunov</p></li> <li> <p>Alister Burt</p></li> </ul> <p>Dimitry leads a research group at Genentech in the San Francisco Bay Area. He wrote Warp, M and friends during his PhD in Patrick Cramer's lab at the Max Planck Institute for Biophysical Chemistry in G\u00f6ttingen, Germany.</p> <p>Alister joined Dimitry at Genentech in late 2023. Alister was an early adopter of the Warp/M ecosystem who now helps out with development.</p>"},{"location":"home/m/","title":"M","text":"<ul> <li> Frame Series</li> <li> Tilt Series</li> <li> Reference Based</li> <li> High Resolution</li> <li> Refine Pose</li> <li> Model Electron Optics</li> <li> Model Sample Deformations</li> <li> Denoise References</li> </ul> <p>M is a reference based refinement engine which simultaneously refines particle poses, deformation models and electron optical parameters to get  the highest resolution maps from your frame series or tilt series data.</p> <p>Check out the User Guide to get started!</p>"},{"location":"home/warp/","title":"Warp","text":"<ul> <li> Frame Alignment</li> <li> Defocus Estimation</li> <li> Particle Picking</li> <li> Tomography</li> <li> Plug it in</li> <li> Beautiful UI</li> </ul> <p>Warp integrates algorithms for frame alignment, defocus estimation, particle picking and tomographic reconstruction in a rich user interface. Thanks to its on-the-fly processing mode and integration with SPA tools like cryoSPARC and RELION, you can monitor data quality in real time, analyze data at the microscope, and obtain high-resolution structures even before your data collection is over.</p> <p>Check out the User Guide to get started!</p>"},{"location":"home/warptools/","title":"WarpTools","text":""},{"location":"reference/reference/","title":"Reference","text":""},{"location":"reference/m/particle_operations/","title":"Particle Operations","text":"<p>Access the particle operations menu by clicking on a species' particle count.</p> <p></p>"},{"location":"reference/m/particle_operations/#intersect-with-another-particle-set","title":"Intersect with Another Particle Set","text":"<p>This dialog allows you to intersect the current particle set of a species (\"old set\") with another particle set defined in a STAR file (\"new set\").</p> <p>When loading particles from another M species, the source frame/tilt series are matched unambiguously, and the coordinates are always in \u00c5ngstrom. When loading a refinement or classification result from RELION, the data sources must be matched manually in case of name duplications, and the pixel size for the coordinates must be provided.</p> <p>Once loaded, particles matches between the two sets are found by solving the unbalanced assignment problem with the inter-particle distance as the cost function. You can specify a maximum tolerance distance for the matching, beyond which any matches will be dismissed. The inter-particle distance histogram can help you with that.</p> <p>The matching creates 3 sets: \"only old\", \"in both\" (intersection), and \"only new\". The particles in the intersection will keep their old poses. You can select any combination of them and update the species' particle list with the resulting set. For instance, if you want to add completely new particles (e.g., for a data source you didn\u2019t use before), set the tolerance distance to 0, and select \"only old\" and \"only new\". If you want to remove certain particles, set the tolerance distance accordingly and select \"only old\". If you want to keep only particles remaining after another classification run, select \"in both\". To remove particles that shifted too much during M\u2019s refinement, select the STAR file from the first version of the species, set the tolerance distance, and select \"in both\". The possibilities are quite limitless, yes, yes!</p>"},{"location":"reference/m/particle_operations/#export-sub-tomograms","title":"Export Sub-tomograms","text":"<p>M can refine per-particle pose trajectories. To consider them for export, please use this dialog rather than Warp\u2019s particle export. Some field values will be pre-populated based on the species' parameters, but feel free to change them. Particle export from frame series is currently not supported.</p> <p>Output will be scaled to: The target pixel size to which the tilt series data will be scaled prior to reconstruction. It can\u2019t be smaller than the size dictated by the Bin parameter in the Input settings section. The maximum resolution achievable with the data will be twice the pixel size.</p> <p>Box size is: The sub-tomogram box size in pixels. M avoids CTF aliasing by calculating the necessary minimum box size for the particle's defocus value and the expected maximum resolution, as dictated by the pixel size, and then crops the volume back to the value you specified. For high-defocus data and small boxes, this can make the high-resolution Thon rings invisible. Don't worry, this is fine. In fact, it is much finer than previous methods that would have made the data useless beyond the aliasing-free resolution.</p> <p>Particle diameter is: The particle diameter should be roughly the same you will use later in RELION, otherwise it might complain about incorrect normalization.</p> <p>Volumes / Image series: In addition to reconstructing 3D sub-tomograms, M can also generate a series of 2D tilt images for each particle. There is currently no use for this data type in RELION, unless you have giant particles with a lot of signal and would like to refine the particle tilt images completely independently like in EMAN 2.3. This is probably not a good idea.</p> <p>Shift by: You can shift all particle positions by the same amount in 3D. If the input STAR file contains refined particle orientations (rlnAngleRot/Tilt/Psi columns), the shift will be made in the refined map's reference frame. Use this if you have aligned all particles on a common part of the protein, and want to e.g., shift the map center to a ligand to analyze it further. Note that the shift values are in Angstrom.</p> <p>Pre-rotate particles: If refined particle orientations (rlnAngleRot/Tilt/Psi columns) are available, the reconstructions can be pre-rotated to their common reference frame. If you were to average the resulting sub-tomograms without considering any rotations (e.g., simply sum them up in Matlab), you would get the refined map. This can be useful if you\u2019re developing a new method to analyze the particles (e.g., variance, 3D PCA etc.) and don\u2019t want to bother with particle orientations. The 3D CTFs will be pre-rotated to the same reference frame, too.</p> <p>Limit to first N tilts by dose: The reconstructions or particle tilt series will contain only data from the first N tilts, sorted by dose. This can be useful if you think the late tilts don't contain any information that might help your analysis.</p> <p>Invert contrast: Multiply the input data by -1 to invert the contrast. Following standard conventions, black particles from cryo data will become white if this is enabled.</p> <p>Normalize input images: The scaled tilt images will be normalized to mean = 0, standard deviation = 1 prior to reconstruction.</p> <p>Normalize output volumes: Normalizes the reconstructions so that the volume outside the specified particle diameter is mean = 0, standard deviation = 1. This is required for RELION.</p> <p>Make 3D CTF sparse: Don't use this just yet! It requires a patch for RELION that isn\u2019t public yet. If enabled, every voxel of the 3D CTF with a value below 0.01 will be explicitly set to 0. This allows the patched RELION algorithms to completely exclude them from calculations, saving a lot of time.</p> <p>After clicking Export, M will ask you to specify the name and location of the output STAR file that will contain the paths of all volumes and their metadata. Use this file as input for RELION.</p>"},{"location":"reference/noise2map/noise2map/","title":"3D Denoising with Noise2Map","text":""},{"location":"reference/noise2map/noise2map/#overview","title":"Overview","text":"<p>Noise2Map is a command-line tool included in Warp's installation directory for training a denoising neural network on volumetric data, based on the noise2noise principle. It requires adding the installation directory to your PATH for easier execution.</p>"},{"location":"reference/noise2map/noise2map/#system-requirements","title":"System Requirements","text":"<ul> <li>At least two GPUs, or one GPU with a minimum of 16 GB memory.</li> </ul>"},{"location":"reference/noise2map/noise2map/#data-types-supported","title":"Data Types Supported","text":"<ul> <li>Half-map reconstructions from single particle data.</li> <li>Tomograms.</li> </ul>"},{"location":"reference/noise2map/noise2map/#usage","title":"Usage","text":""},{"location":"reference/noise2map/noise2map/#denoising-half-maps","title":"Denoising Half-Maps","text":"<ul> <li>Data Setup: Place the first map of each pair in one folder (e.g., \"odd\"), and the   second in another (e.g., \"even\"). Ensure file names are identical across folders.</li> <li>Execution: Use arguments like <code>--observation1</code> and <code>--observation2</code> to specify   folder paths.</li> <li>Additional Parameters:<ul> <li><code>--mask</code>: Path to a binary mask to help balance training samples.</li> <li><code>--dont_flatten_spectrum</code>: Disable amplitude spectrum flattening.</li> <li><code>--overflatten_factor</code>: Adjusts the degree of flattening or sharpening.</li> <li><code>--lowpass</code> and <code>--angpix</code>: Used to set filtering based on resolution and   pixel size.</li> </ul> </li> <li>Training: Typical training involves 600 iterations but can be adjusted based on   GPU memory constraints.</li> </ul>"},{"location":"reference/noise2map/noise2map/#denoising-tomograms","title":"Denoising Tomograms","text":"<ul> <li>Data Preparation: Utilize Warp's UI to separate odd/even tilt images and   potentially pre-deconvolve them.</li> <li>Key Differences in Parameters:<ul> <li>Do not use a mask.</li> <li>Set <code>--dont_flatten_spectrum</code>.</li> <li>Typically requires more than 10,000 iterations.</li> </ul> </li> </ul>"},{"location":"reference/noise2map/noise2map/#output","title":"Output","text":"<ul> <li>Denoised maps are saved in a \"denoised\" folder. Separate denoising of half-maps can be   specified.</li> </ul>"},{"location":"reference/noise2map/noise2map/#note","title":"Note","text":"<ul> <li>If reusing a model (<code>--old_model</code>), ensure that the filtering parameters match those   used during its training to avoid invalidating the model.</li> </ul>"},{"location":"reference/warp/models/","title":"Spatiotemporal Models","text":"<p>From Real-time cryo-electron microscopy data preprocessing with Warp</p> <p>Many methods in Warp are based on a continuous parametrization of 1- to 3-dimensional spaces. This parameterization is achieved by spline interpolation between points on a coarse, uniform grid, which is computationally efficient. A grid extends over the entirety of each dimension that needs to be modeled. The grid resolution is defined by the number of control points in each dimension and is scaled according to physical constraints (for example, the number of frames or pixels) and available signal. The latter provides regularization to prevent overfitting of sparse data with too many parameters. When a parameter described by the grid is retrieved for a point in space (and time), for example for a particle (frame), B-spline interpolation is performed at that point on the grid. To fit a grid\u2019s parameters, in general, a cost function associated with the interpolants at specifc positions on the grid is optimized. In the following, we distinguish between 2\u20133 spatial grid dimensions (X and Y axes in micrographs; X, Y and Z in tomographic volumes), and a temporal dimension as a function of the accumulated electron dose. We note that B-splines are only used to interpolate parameters, not image data. For the latter higher-order schemes are used.</p>"},{"location":"reference/warp/task_dialogs_frame_series/","title":"Frame Series Task Dialogs","text":""},{"location":"reference/warp/task_dialogs_tilt_series/","title":"Tilt Series Task Dialogs","text":""},{"location":"reference/warp/task_dialogs_tilt_series/#reconstruct-full-tomograms","title":"Reconstruct Full Tomograms","text":"<p>This dialog allows you to reconstruct \"full tomograms\", i.e., volumes located at the center of the tilt series with the Unbinned tomogram dimensions set previously in the Input settings section. These tomograms can be used for visual inspection and template matching. Important: Unlike other pipelines, where the reconstruction of a giant, unbinned tomogram is required to extract sub-tomograms at unbinned pixel size from it, Warp's workflow expects you to use the dedicated sub-tomogram reconstruction dialog to obtain sub-tomograms with an unbinned/very small pixel size. Reconstructing a very large tomographic volume in Warp will take very long and has a good chance of crashing.</p> <p>The reconstructed tomograms will be located in the reconstruction subfolder, and the file names will contain the pixel size as a suffix. Tomogram reconstruction will be skipped for items that already have volumes saved at that pixel size. If you would like to replace them, please delete the volumes manually from the reconstruction subfolder.</p> <ul> <li>Pixel size: The target pixel size to which the tilt series data will be scaled   prior to reconstruction. It can't be smaller than the size dictated by the Bin   parameter in the Input settings section. The maximum resolution achievable with   the data will be twice the pixel size.</li> <li>Invert contrast: Multiply the input data by -1 to invert the contrast. Following   standard conventions, black particles from cryo data will become white if this is   enabled.</li> <li>Normalize input images: The scaled tilt images will be normalized to mean = 0,   standard deviation = 1 prior to reconstruction.</li> <li>Also produce deconvolved version: In addition to the normal reconstruction, a   deconvolved version will be made and stored in the reconstruction/deconv subfolder.   The visual effect is depicted here. Please   also refer to that page for parameter description. The defaults are often fine.</li> <li>Separate odd/even tilts for denoising: In addition to the normal reconstruction, a   pair of reconstructions from all odd and even tilts will be made and stored in the   reconstruction/odd and reconstruction/even subfolders. These pairs can be used   to train a 3D denoiser. If Also produce   deconvolved version is checked, both tomograms will have the same deconvolution   filter applied to them.</li> <li>Keep only fully covered voxels: If enabled, voxels in the reconstruction that are   not covered by all of the tilts due to excessive shifts or rotations will be zeroed   out. Do not enable this if you intend to perform template matching on the tomograms \u2013   it will lead to artifacts. The template matching procedure itself will apply a similar   mask to the result.</li> </ul>"},{"location":"reference/warp/task_dialogs_tilt_series/#export-particles","title":"Export Particles","text":""},{"location":"reference/warp/task_dialogs_tilt_series/#export-sub-tomograms","title":"Export Sub-Tomograms","text":"<p>This dialog allows you to reconstruct \"sub-tomograms\", i.e., small, cubic volumes centered around a set of 3D coordinates you provide. The pixel size of these reconstructions is usually much smaller than the one used for full tomogram reconstruction because the volumes are later aligned on a common target and averaged to obtain better signal. Warp also reconstructs a 3D CTF volume for each particle to be used in RELION's refinement procedure.</p> <p>If you're only starting to incorporate Warp into your tomography pipeline, a few things can go wrong at this step. The first sanity check to do after sub-tomogram export is to average all the volumes and hopefully observe a white blob in the middle of the average. This way you know that the particle positions coincide with the actual particles, as opposed to being off if something ist wrong. The easiest way to get the average is to use RELION's <code>relion_reconstruct</code> (or <code>relion_reconstruct_mpi</code> for the parallelized version). The command looks something like this:</p> <pre><code>relion_reconstruct --i particles_from_warp.star --o rec.mrc --3d_rot --ctf\n</code></pre> <p>Before you see the actual dialog, Warp will ask you to provide a file with particle coordinates. Only RELION's STAR format is currently supported. The file must contain at least the <code>rlnCoordinateX/Y/Z</code> columns. If <code>rlnOriginX/Y/Z</code> are specified, Warp will consider them, and the values will be reset to 0 in the STAR file Warp generates. You can use either a single file for all tilt series or, if you have one file per tilt series (e.g., after template matching) with names formatted as <code>[series name]_suffix.star</code>, you can point Warp to one of those files and it will figure out the suffix automatically and find all remaining files in the same folder. In the second case, One input file per tilt series will become checked. If you'd like to use just the file you selected and reconstruct sub-tomograms from only one tilt series, you can uncheck it.</p> <p>Coordinates use...: If the coordinates come from RELION, they are in pixels. Because you might want to switch the pixel size occasionally, Warp handles all coordinates in Angstrom internally. Thus, you need to specify the pixel size used in that particular STAR file. It is assumed to be the same for <code>rlnCoordinateX/Y/Z</code> and <code>rlnOriginX/Y/Z</code>.</p> <p>Coordinates are normalized: If the coordinates come from Warp's template matching, they are normalized to a range of [0; 1]. Warp will automatically scale them back to the physical tomogram dimensions if you check this option.</p> <p>Output will be scaled to...: The target pixel size to which the tilt series data will be scaled prior to reconstruction. It can\u2019t be smaller than the size dictated by the Bin parameter in the Input settings section. The maximum resolution achievable with the data will be twice the pixel size.</p> <p>Box size is...: The sub-tomogram box size in pixels. Warp avoids CTF aliasing by calculating the necessary minimum box size for the particle's defocus value and the expected maximum resolution, as dictated by the pixel size, and then crops the volume back to the value you specified. For high-defocus data and small boxes, this can make the high-resolution Thon rings invisible. Don't worry, this is fine. In fact, it is much finer than previous methods that would have made the data useless beyond the aliasing-free resolution.</p> <p>Particle diameter is...: The particle diameter should be roughly the same you will use later in RELION, otherwise it might complain about incorrect normalization.</p> <p>Volumes / Image series: In addition to reconstructing 3D sub-tomograms, Warp can also generate a series of 2D tilt images for each particle. There is currently no use for this data type in RELION, unless you have giant particles with a lot of signal and would like to refine the particle tilt images completely independently like in EMAN 2.3. This is probably not a good idea.</p> <p>Shift by...: You can shift all particle positions by the same amount in 3D. If the input STAR file contains refined particle orientations (<code>rlnAngleRot/Tilt/Psi</code> columns), the shift will be made in the refined map's reference frame. Use this if you have aligned all particles on a common part of the protein, and want to e.g. shift the map center to a ligand to analyze it further. Note that the shift values are in Angstrom.</p> <p>Pre-rotate particles: If refined particle orientations (<code>rlnAngleRot/Tilt/Psi</code> columns) are available, the reconstructions can be pre-rotated to their common reference frame. If you were to average the resulting sub-tomograms without considering any rotations (e.g. simply sum them up in Matlab), you would get the refined map. This can be useful if you're developing a new method to analyze the particles (e.g. variance, 3D PCA etc.) and don't want to bother with particle orientations. The 3D CTFs will be pre-rotated to the same reference frame, too.</p> <p>Limit to first N tilts by dose: The reconstructions or particle tilt series will contain only data from the first N tilts, sorted by dose. This can be useful if you think the late tilts don't contain any information that might help your analysis.</p> <p>Invert contrast: Multiply the input data by -1 to invert the contrast. Following standard conventions, black particles from cryo data will become white if this is enabled.</p> <p>Normalize input images: The scaled tilt images will be normalized to mean = 0, standard deviation = 1 prior to reconstruction.</p> <p>Normalize output volumes: Normalizes the reconstructions so that the volume outside the specified particle diameter is mean = 0, standard deviation = 1. This is required for RELION.</p> <p>Make 3D CTF sparse: Don't use this just yet! It requires a patch for RELION that isn't public yet. If enabled, every voxel of the 3D CTF with a value below 0.01 will be explicitly set to 0. This allows the patched RELION algorithms to completely exclude them from calculations, saving a lot of time.</p> <p>Make paths relative to STAR: Paths to the reconstructed volumes and 3D CTFs will be made relative to wherever you choose to save the output STAR file. Usually a good idea.</p> <p>After clicking Export, Warp will ask you to specify the name and location of the output STAR file that will contain the paths of all volumes and their metadata. Use this file as input for RELION.</p>"},{"location":"reference/warp/interface/interface_overview/","title":"Warp Interface Overview","text":"<p>Switch between the light and dark UI themes.</p> <p></p> <p>All available GPUs are listed here, together with their free memory capacity. The checkboxes can be unticked to exclude specific GPUs from processing.</p> <p></p> <p>Warp automatically saves the latest set of processing settings used for a folder. These buttons allow saving and loading a permanent copy of the settings. Warp will also offer to load a folder's auto-saved settings when switching to that folder in the input options.</p> <p></p>"},{"location":"reference/warp/interface/interface_overview/#input-folder","title":"Input Folder","text":"<p>The input folder contains all the files that should be processed. Warp will not look for files recursively in sub-folders, so all files must be located on the top level. Several file formats are supported: MRC, EM (from the TOM Toolbox), header-less (anything binary with a fixed header length), and Warp's own TomoSTAR for tilt series definition. If you're working with a header-less format (or any format Warp doesn't recognize yet), select the DAT option, and specify the frame dimensions, data type, and an optional offset at the beginning of the files. Only the *.dat extension is supported for the file names, but you can use any header-less format by renaming them. Warp's interface switches to tomography mode if TomoSTAR is selected as the input format.</p> <p>The pixel size in the X and Y dimensions refers to the raw, unbinned data. If you haven't determined the magnification anisotropy for your microscope, both numbers will be the same. The anisotropy angle specifies the anti-clockwise rotation of this X/Y coordinate system. The anisotropy will be considered for CTF fitting and corrected (i.e., equalized) in the exported particles and full tomogram reconstructions. However, whole-micrograph averages remain uncorrected, so particle positions don't need to be rescaled when you decide to change the anisotropy parameters.</p> <p>The binning factor can assume any positive rational values. The frames will be Fourier-cropped to Size / 2^n.</p> <p>If you enter any non-zero electron dose value, frames will be weighted in all operations that produce averages, e.g., aligned movie or particle averages. The weighting is implemented as a B-factor of -3*Dose \u00c5^2. Please don't forget to convert the dose value to the correct units.</p> <p>The raw data can be multiplied by a gain reference to correct for systematic errors in pixel intensities. Please make sure the gain reference matches the data. Warp will tell you if the dimensions don't match, but it can't detect if the reference is flipped in X or Y. For instance, older Digital Micrograph versions flip the output in Y when converting a DM4 gain reference to MRC.</p>"},{"location":"reference/warp/interface/interface_overview/#ctf-settings","title":"CTF Settings","text":"<p>The Window specifies the size of the power spectrum. If you expect only low defocus values or need highly localized defocus values, leave the window small, e.g., 512 px.</p> <p>The Range specifies the spatial frequencies used for fitting. It is usually best to ignore the lowest frequencies. If you specify a defocus model without spatial resolution (see the next section), you can set the maximum range to 1.0. If you are fitting a highly resolved model, keep the maximum value lower to prevent overfitting.</p> <p>In some cases (e.g., very low dose images), the fitting will work better if the power spectrum is created from the aligned movie average instead of the per-frame power spectra \u2013 check Use Movie Sum to do that.</p> <p>The Voltage and C_S (spherical aberration) values are specific to your microscope model. A Titan Krios is usually operated at 300 kV, and C_S is 2.7 mm in most modes.</p> <p>The C_C (chromatic aberration), Illumination Aperture, and \u0394E (energy spread) values are currently not used but might become relevant in future versions of Warp. Just leave the defaults for now \u2013 we'll figure out what to do with them later!</p> <p>The Amplitude value defines the fraction of amplitude contrast in the CTF. Commonly used values for cryo data are 0.07 and 0.10, while negative stain data are often fitted with 0.20.</p> <p>The Defocus spread defines the range of defocus values for the initial exhaustive search. Set both values to match the range specified in your acquisition software with a bit of a margin.</p> <p>When dealing with data acquired with a phase plate, check Phase Shift to fit that parameter as well.</p> <p>Mode Ice Ring is currently an experimental feature that will attempt to model the CTF around the 3.6 \u00c5 amorphous ice ring separately from the rest of the power spectrum.</p>"},{"location":"reference/warp/interface/interface_overview/#motion-estimation","title":"Motion Estimation","text":"<p>Global and local motion estimation will consider the specified range of spatial frequencies and weight their importance according to the B-factor. The default range of 0.05\u20130.25 is usually ok for data with 1.00\u20131.35 \u00c5/px. For larger pixels, consider increasing the range, and vice versa. The more negative the B-factor, the less the higher spatial frequencies will be considered.</p>"},{"location":"reference/warp/interface/interface_overview/#models","title":"Models","text":"<p>Defocus: The first two values define the spatial resolution, i.e., how locally the defocus will be estimated (the value at each particle's position is later interpolated based on the values in that coarse model). 5\u00d75 is usually a good value for a 4K micrograph at 1.0\u20131.3 \u00c5/px. Higher values could make sense for larger pixels, and lower values for smaller pixels. The third parameter defines the temporal resolution. This allows changes in defocus and phase shift to be modeled over the duration of a single movie. Please note that a temporal resolution higher than 1 leads to a vastly increased memory footprint during processing, while probably not improving the final resolution in most cases.</p> <p>Motion: As with the CTF model, the first two parameters for the motion model describe the spatial resolution, and the third describes the temporal resolution. The spatial resolution will be considered in fitting the local beam-induced motion, while the full specified temporal resolution will be used for fitting the global motion. The temporal resolution can usually match the number of frames in the movies. However, if the movies are acquired at an unusually low dose rate, i.e., far less than 1 e/px/frame, you can set the temporal resolution to approximately match the overall electron dose per pixel.</p>"},{"location":"reference/warp/interface/interface_overview/#picking","title":"Picking","text":"<p>Clicking Select BoxNet model... or the currently selected model's name will open a dialog with a list of all available models, and buttons to either use one of them, or retrain it with your own data. User guide pages about using and retraining BoxNet models will provide you with more details.</p> <p>The Diameter setting controls how close two particles can be together before the particle with lower probability is dismissed from the picks. The Data Type determines whether the sign of the data is flipped before picking (negative stain), or not (cryo). A Minimum Score threshold is applied to BoxNet's predictions. When using a model specifically pre-trained on the current protein species, the score can be typically left at its default value of 0.95. Picking new species with the generic version can sometimes require lower threshold values to pick up everything.</p> <p>If you're using a BoxNet version that can create masks, you can enforce a Minimum Distance between particles borders (as defined by their diameter) and \ud83d\udca9.</p> <p>The picked particles can be extracted immediately after the picking, which is especially useful for real-time processing. For that, the Box Size must be set \u2013 ca. 150 % of the particle diameter is recommended to avoid interpolation artifacts later. The pixel size is fixed to that used for the entire pre-processing pipeline. If you want to extract particles with a different pixel size, you can do so later using one of the Task Dialogs. Cryo data need to be inverted upon extraction. For SPA packages that require particles to be pre-normalized, e.g., RELION, the diameter used for picking will also be used for background normalization.</p>"},{"location":"reference/warp/interface/interface_overview/#output","title":"Output","text":"<p>The first few frames in a movie suffer especially badly from beam-induced motion and can usually be discarded by adjusting the output frame range. This setting will also be respected in all other operations that deal with frames, e.g., particle extraction.</p> <p>In addition to extracted particles, there are 3 output types for 2D movies:</p> <p>Average: You will almost always want to produce an average in order to inspect the micrographs visually. You can also use other tools to extract particles from them if you don't want to use Warp for that.</p> <p>Deconvolved Average: The same deconvolved version of the average you can see live in the Real Space tab, written out as an MRC file. This can be useful for inspecting the micrographs with better contrast in other tools, but is usually not needed if you only want to screen the data in Warp. Please note that despite the seemingly better contrast, operations like particle picking won't work better on the deconvolved images.</p> <p>Aligned Stack: Some workflows \u2013 RELION's particle polishing in particular \u2013 rely on pre-aligned movies as input. Please note that aligned movies are very large and will create significant storage and processing overhead. To save some space, you can collapse groups of consecutive frames into one.</p>"},{"location":"reference/warp/interface/interface_overview/#processing-mode","title":"Processing Mode","text":"<p>Clicking Start Processing puts Warp into processing mode. This mode remains active until Stop Processing is clicked. Editing any processing settings and launching task dialogs is disabled while in processing mode, but viewing and editing processing results (e.g., particle positions) is enabled.</p> <p>Warp will go through all items in need of processing sequentially (sorted alphabetically) and perform the currently selected processing steps. If processing results are already available for some steps (e.g., CTF or motion) and their settings match the current ones, the processing will not be repeated for those specific steps to save time. However, some processing steps depend on the results of other steps. For instance, particle picking depends on frame alignment because it uses the average. If frame alignment is reprocessed, particle picking will be performed again subsequently.</p>"},{"location":"reference/warp/interface/interface_overview/#settings-collapse","title":"Settings Collapse","text":"<p>This button lets you collapse the settings panel to make more room for the results. With the settings collapsed, there is enough space to display Fourier and Real Space results side by side on a large screen, so both tabs will be merged.</p> <p></p> <p>In addition to on-the-fly processing, Warp offers several offline tasks that can be performed once the processing is finished. Most of the tasks are related to importing and exporting data from/to RELION and compatible packages. Each task is explained in a detailed user guide page.</p>"},{"location":"reference/warp/interface/interface_overview/#plot-status","title":"Plot Status","text":"<p>As movies are processed, they change their status. Every movie is initially marked as unprocessed. Once it has passed through the entire pipeline, it is considered processed. If you change any processing settings, previously processed items will be marked as outdated, i.e., in need of reprocessing. If a processed item's quality criteria don't match the current filter thresholds (see section below), it is labeled filtered out. Finally, if you deselect an item manually in the navigation bar, it will be colored as deselected.</p>"},{"location":"reference/warp/interface/interface_overview/#astigmatism-plot","title":"Astigmatism Plot","text":"<p>The astigmatism plot shows each movie's fitted astigmatism in a 2D coordinate system. The coordinates are computed as <code>X = cos(2 * angle) * magnitude, Y = sin(2 * angle) * magnitude</code>. This means the circumference of the depicted circle is only 180\u00b0 (the fitted angles are only unique within 0\u2013180\u00b0). The color reflects an item's coordinate on the time axis, going from old to new.</p> <p>Unlike the other filters, the astigmatism filter considers the distance of a movie's astigmatism to the entire dataset's mean astigmatism, normalized by its standard deviation. Thus, whenever an item's astigmatism value changes, the entire filter is re-evaluated without an explicit change in the threshold.</p> <p></p> <p>As soon as an item is processed, its key parameters are added to or updated in the plots: Defocus, astigmatism, phase shift, estimated resolution, average intra-frame motion, number of particles, and the percentage of masked micrograph area. Some of the parameters are likely correlated with the data quality. Using the sliders above the plots in the Overview tab, you can define Filter Thresholds for all of them.</p> <p>As you change a filter threshold, processed items above and below the threshold will change their status between processed and filtered out. Filtered out items can be excluded from all tasks. During on-the-fly processing with particle picking enabled, items that pass all filters are maintained in a separate goodparticles_BoxNetName.star file.</p>"},{"location":"reference/warp/interface/interface_overview/#particle-count-filter","title":"Particle Count Filter","text":"<p>The particle count filter has a special additional parameter: the particle file suffix. All particle coordinates are stored as per-movie STAR files in <code>[Input Folder]/matching</code>. Multiple files can be associated with the same movie by using different suffixes. When a movie is added to Warp's list, it automatically finds all available suffixes for that item. The suffix menu contains the superset of all available suffixes of all items. If you manually add STAR files to the matching folder, you need to restart Warp so it can find the new files.</p> <p>The filter can only consider one suffix at a time. Please note that the suffix doesn't update automatically if you start re-picking the data with a different BoxNet model. The suffix list will contain the new BoxNet's name once at least one micrograph has been picked.</p>"},{"location":"user_guide/installation/","title":"Installation","text":""},{"location":"user_guide/overview/","title":"Overview","text":"Process your cryo-EM data. Fast.  <p>This section of the site provides examples of processing your data with  Warp, M, and WarpTools.</p>"},{"location":"user_guide/m/quick_start_m/","title":"Quick Start: M","text":"<p>M is a stand-alone program shipped with Warp. While Warp handles the first stages of the data processing pipeline, M lives on its opposite end. It allows you to take refinement results from RELION and perform a multi-particle refinement. For frame series data, the procedure is similar to RELION's \"particle polishing\" and probably won't deliver significantly better results \u2013 unless you have a very heterogeneous dataset that can benefit from M's ability to consider as many classes as you want (memory limitations apply!), or maps with heterogeneous resolution that can benefit from M's map denoising. For tilt series data, M will likely deliver a noticeable resolution boost compared to patch tracking- or fiducials-based tilt alignments. Refinement of in situ data will also benefit significantly from the unlimited number of classes and transparent mechanisms for combining data from different sources.</p>"},{"location":"user_guide/m/quick_start_m/#the-pipeline","title":"The pipeline","text":"<p>Pre-processing of frame series or tilt series in Warp \u2193 Particle image or sub-tomogram export from Warp \u2193 Classification and refinement in RELION \u2193 Import and refinement in M \u2193 Final maps</p> <p>(optionally: \u2192 re-export improved particles from Warp \u2192 re-classify and refine in RELION \u2192 import and improve alignments in M \u2192 repeat as needed)</p>"},{"location":"user_guide/m/quick_start_m/#project-structure","title":"Project structure","text":"<p>M strives to be a great tool for in situ data, which have been compared to \"molecular sociology\". Thus, its terminology takes a somewhat sociological angle. A project in M is referred to as a Population. A population contains at least one data source and at least one species. A Data source contains a set of frame series or tilt series and their metadata. A * Species* is a map that is refined, as well as particle metadata for the available data sources.</p>"},{"location":"user_guide/m/quick_start_m/#creating-a-population","title":"Creating a population","text":"<p>When M starts, you can choose between creating a new population and opening an existing one. To create a new population, give it a name and specify its root folder. There are no particular requirements for this location. It won't experience much IO during refinement, and the species folders contained there might grow to a few tens of gigabytes depending on map size. For populations with a single data source, we usually just go one level above the old Warp project folder.</p>"},{"location":"user_guide/m/quick_start_m/#adding-data-sources","title":"Adding data sources","text":"<p>Once a population is open, you can click on the data source summary saying \"0 data sources\" to open the management dialog. Remote data sources are not supported at the moment. Click Add local and select a .settings file in a Warp project folder. Once M converts that file into a data source, its parameters and list of items become read-only. So if you want to change something (e.g. quality filter settings or binning value), load the folder in Warp and modify the settings. M will read in the metadata for all items and present you with the number of items that pass all quality criteria, as well as those filtered out or deselected manually. Give the data source a name, choose whether to include the sub-optimal items, and set the maximum number of frames or tilts (sorted by dose). The latter can be useful if the data have a very high overall dose that was used for picking or visual interpretation, but isn't required for high-resolution alignment \u2013 this will save computational resources during M's refinement. You can't change this setting later. Finally, click Create. The list of data sources should now contain the new source with its input settings.</p>"},{"location":"user_guide/m/quick_start_m/#adding-species","title":"Adding species","text":"<p>Make sure you've added all data sources you'd like to use, and click the big + to initiate the creation of a new species. Remote species aren't supported yet, but you can create a local one from scratch. Select From scratch and click add.</p> <p>Give the species a Name and specify its Diameter along the longest axis. This value will determine the box size (2x diameter) and the spherical mask diameter for some operations. The Molecular weight currently isn't used anywhere, but you can specify a value anyway in case some smart heuristics become available in a future M version to take advantage of it. The Symmetry follows RELION's conventions. Select the correct group and a multiplier if applicable. The number of Temporal samples for poses determines how finely per-particle translation and rotation trajectories will be resolved as a function of dose. The optimal value depends on the particle mass (bigger = more signal = can fit more parameters) and the overall dose. Frame series data with a relatively low dose can benefit from 2\u20133 sampling points (2 still works for a 150 kDa protein), while 100+ e/\u00c52 tilt series can use 3\u20134 (especially when dealing with particles as large as ribosomes). If you intend to classify the particles further after an initial M refinement, you may want to set the number of temporal samples to 1 to definitely avoid biasing the classification through overfitting on a single reference.</p> <p>For the Half-maps, it is best to select the final, unfiltered half-maps from RELION's 3D refinement. If you performed the refinement with binned data, please rescale the maps first to the pixel size you'd like to use in M, e.g. using the relion_image_handler utility. Once the first half-map is selected, M should figure out the Pixel size based on its header. If not, specify the value manually. The interactive isosurface renderings are there to help you make sure the selected half-maps are what you think they are.</p> <p>The Mask can be loaded from a volume you made using the relion_mask_create utility, or prepared in M by low-pass filtering the average of the half-maps and selecting a binarization threshold. For refinements, M will expand and smooth the mask based on the current refinement resolution. Thus, the mask you provide should be binary (no smoothing) and as tight as what you would get in RELION before the expansion and smoothing steps. The pixel size and dimensions should be the same as those of the half-maps.</p> <p>To use refined Particle positions and orientations from RELION, select a *_data.star file from the Refine3D job. M should be able to figure out the correct pixel sizes for both coordinates and shifts. Please correct the values manually if you think they are wrong. Deselect any data sources you don't want the particles to be linked to (e.g. in case of identical file names in multiple sources). If you have repeating file names across several data sources, please add the particles for one of them and use the particle set operations to add more later. M will report the number of particles that have been successfully linked to the data. If that number is 0 or lower than it should be, mismatching file names are the most likely culprit. Make sure the names in the rlnMicrographName column of the data.star file don't have any extra parts compared to the file names in the data source. For tilt series, rlnMicrographName should reference the .tomostar files.</p> <p>Once everything is specified correctly, click Finish. M will calculate some map statistics and train an initial denoising model, which might take 10\u201315 minutes depending on your hardware.</p>"},{"location":"user_guide/m/quick_start_m/#setting-up-refinement","title":"Setting up refinement","text":"<p>With all data sources and species set up, click the big Refine button to bring up the refinement dialog. Here you can select different groups of parameters to be optimized.</p> <p></p> <p>Refine for N sub-iterations: During each refinement iterations, M alternates between refining various sets of parameters. To accelerate convergence, this can be done for several sub-iterations, which will all use the same reference maps for the optimization. If you're refining only one set of parameters (e.g. particle orientations), you can set the value to 1. Otherwise, 2\u20133 makes sense.</p> <p>Use N % of available resolution in first sub-iteration: M performs a gradient descent optimization, which can easily get stuck in local optima. To avoid this, the resolution can be decreased in the beginning and gradually increased until the final sub-iteration. This can be especially useful for the first refinement iteration on a new data source. Also, when changing the image or volume warp grid resolution, you should start with lower refinement resolution (see section below). If only 1 sub-iteration is to be performed, it starts with 100 % of the available resolution.</p>"},{"location":"user_guide/m/quick_start_m/#geometry","title":"Geometry","text":"<p>Image warp: This models the non-linear 2D deformation in each frame or tilt image due to beam-induced motion and charging. The model is set in the image reference frame, so if you have rectangular 6000x4000 px K3 images, a 6x4 grid might be more favorable than 4x4. The temporal dimension of the model equals the number of frames or tilts. For frame series, a pyramid of models will be created where each subsequent model has 2x the spatial dimension of the previous one, and 0.25x the temporal dimension. So even if you start with a 1x1 model, the resulting pyramid will still model some slow spatial deformation. Tilt series don't get pyramids (although including volume warp or tilt movie refinement has a similar effect, see below). For both frame and tilt series, the optimal spatial resolution will depend on the number of particles per micrograph, as well as the signal available per particle.</p> <p>Anisotropic magnification: Some microscopes can exhibit significant linear distortion. This option enables its refinement based only on geometry (i.e. not taking its effect on the CTF into account). At the end of the iteration, the CTF is also adjusted accordingly. Because anisotropic magnification can be partially fitted with astigmatism in the CTF, defocus refinement (which includes astigmatism) is recommended in the same iteration.</p> <p>Doming (frame series only):</p> <p>Stage angles (tilt series only): Due to mechanical imprecisions in the stage's movement and lack of rigidity in lamella-like samples, the sample orientation can deviate significantly from their assumed values. While the biggest effect is in the projected particle positions, which are implicitly taken care of by the image warp model (at least 2x2 spatial resolution is required there), large particles can benefit from additional refinement of the sample/stage orientations. The temporal resolution of this model is per-tilt.</p> <p>Volume warp (tilt series only): Tilt series are often used for thick samples where multiple particles can overlap along the projection axis. If the sample experiences shearing perpendicular to the projection axis, layers of particles can be displaced in a way that can't be modeled by mere 2D deformation of the images. Instead, a warping model in the reference frame of the tomographic volume is needed to influence particle positions in 3D. The resulting model has 4 dimensions: 3 spatial and 1 temporal (as a function of dose). The motion can usually be modeled with sparser temporal resolution since all the fast per-tilt movement is already taken care by the image warp model. Having a spatial Z dimension of at least 2 is necessary to model shearing. As with image warp, the optimal resolution depends on the available overall signal. However, it doesn't need to be as fine as image warp. Something like 2x2x2x10 might suffice. If your images are rectangular and you want the model to reflect that, remember that this is the tomogram reference frame where the tilt axis is aligned with the Y axis. It means that 6000x4000 px images with a tilt axis angle close to 90\u00b0 or 270\u00b0 will need e.g. a 2x3 model.</p> <p>Tilt movies (tilt series only): If you used Warp in all of the pre-processing steps, M can go back all the way to the original tilt movies and optimize their frame alignment using the same high-resolution references. This procedure usually takes a significant amount of time. Once the refinement of a tilt movie is finished, an average tilt image will be saved in the average subfolder of the old Warp project directory, overwriting Warp's previous result. Please note that M currently doesn't back up the previous version. If something goes wrong and you'd like to go back, please either back up the old images and movie metadata manually, or re-process the tilt movies with Warp.</p> <p>Particle positions/angles: This is the conventional particle pose optimization, except you're also fitting rotation and translation tracks if you set the species' temporal resolution to be higher than 1.</p>"},{"location":"user_guide/m/quick_start_m/#ctf","title":"CTF","text":"<p>Batch size: M pre-multiplies the particles by their CTF before cropping them to a smaller box for refinement. This has no speed disadvantages for geometry refinement. However, since the CTF must change during CTF refinement, the particles must be constantly re-extracted, pre-multiplied and cropped \u2013 which is computationally expensive. This is done in mini-batches to keep the memory footprint small. Decrease the batch size if you run out of GPU memory. Increase it if you have plenty of GPU memory to gain a bit of speed, but probably not more than half of the average per-series particle count.</p> <p>Use species with at least N \u00c5 resolution: Reference-based CTF refinement requires relatively high resolution to be successful. If you have multiple species with different resolution, this parameter determines which of them will be considered during CTF refinement. For tilt series, the minimum resolution can be a bit lower, e.g. 7 A, whereas frame series with small particles require higher resolution, e.g. 4 A.</p> <p>Defocus: For frame series, defocus refinement establishes per-particle defocus values, and per-series astigmatism with a spatial resolution of 3x3. For tilt series, defocus refinement finds per-tilt defocus and astigmatism values.</p> <p>Grid search in 1st iteration: Gradient descent optimization will fail when the defocus is too far off because of the oscillating nature of the CTF. Instead, a broader, exhaustive search can be performed in the first sub-iteration.</p> <p>Phase shift: If you acquired the data with a Volta phase plate, the phase shift of the CTF will likely be different in each micrograph. Enable this to optimize a single phase shift value for each frame series, or a per-tilt phase shift model for each tilt series.</p> <p>Pixel size: The effect of the pixel size on the CTF is correlated with that of Cs and acceleration voltage. Thus, given that we don't have very accurate absolute values for either of those, we can't arrive at the correct absolute pixel size by refining the CTF model against the data. However, to make the CTF fit better, it is enough to adjust either of the variables relatively to its assumed value. M can refine per-series Cs as a substitute for the pixel size. Because the CTF model changes during this refinement, it is quite slow.</p> <p>Odd Zernike orders: Zernike polynomials of odd orders describe anti-symmetric aberrations. They don't affect the CTF and can thus be refined quickly together with the geometry. 3rd-order polynomials model beam tilt and trefoil. Probably doesn't make sense at resolutions worse than 4 A, unless the microscope is very poorly aligned.</p> <p>Even Zernike orders: Zernike polynomials of even orders affect the CTF and are thus quite slow to refine in M. The refinement is done per-series, so you need a high particle density to get enough signal. This will be handled in a smarter way in the future.</p> <p>CTF refinement: Once your species reach a high enough resolution, you can refine parameters of the contrast transfer function. A resolution of at least 6\u20137 A is recommended for this. Since not all species may reach the same high resolution, you can specify a threshold to Use species with at least x A resolution.</p> <p>Defocus and astigmatism: For frame series, this will refine the defocus values per-particle, as well as one common set of astigmatism parameters. In tilt series, the relative Z offsets between particles are known with a higher precision than could be obtained through defocus refinement. However, defocus and astigmatism can change in each tilt. M optimizes a global defocus offset and astigmatism per-tilt in that case.</p>"},{"location":"user_guide/m/quick_start_m/#changing-model-resolution-between-refinement-iterations","title":"Changing model resolution between refinement iterations","text":"<p>M performs a gradient descent-like optimization to cope with the multitude of parameters in a multi-particle refinement. This means that it is much more likely to get stuck in a local optimum if the global optimum is too far away. Starting refinement using RELION's globally refined poses and at relatively low resolution helps with that. However, if you decide to change the resolution of the image or volume warp models, resampling the model can put some parameters too far away from their optima for the latter to be reached. You should at least set the refinement resolution to be lower in the first sub-iteration, e.g. 70 %. It can also be helpful to ignore the results obtained with the previous models and just restart refinement from the very first iteration. To do so, overwrite the frame or tilt series metadata (located in the same folder as the raw data) as well as the species files with their first versions. The latter can be found in the versions subfolder of the respective data source and species directories. You can also do this with any other previous version if you want. Sorry for the inconvenience \u2013 M's UI will offer a better mechanism in the future.</p>"},{"location":"user_guide/m/quick_start_m/#memory-considerations","title":"Memory considerations","text":"<p>Because M needs to hold all particle images in memory at the same time when refining a frame or tilt series, the memory footprint can become quite large if you have a lot of particles per item and/or high resolution. To address this, M stores these images in \" pinned\" CPU memory, which the GPU can directly access. Unfortunately, the actual available amount of pinned memory is usually far lower than the overall memory capacity, and the exact amount is still a bit of a mystery to us. For instance, on a system with 128 GB RAM, ca. 20 GB can be used as pinned memory by M in our experience. On multi-GPU systems, M will schedule the processing of individual items such that the simultaneous pressure on pinned memory does not exceed an empirically determined limit. This can lead to some GPUs staying idle temporarily while there is not enough memory. If a single item requires more memory than the limit, M will try to process it anyway and may crash. If there are only a few of such densely populated items and they are not critical to the overall project, you can try removing them from the data source's .source file.</p> <p>Meanwhile, GPU memory is used to store reference volumes for all species, the raw frame or tilt data, as well as buffers and FFT plans for fast pre-processing of small batches of particle images. Reconstruction volumes are loaded into GPU memory one species at a time at the end of an item's refinement, and transferred back to (unpinned) CPU memory once back-projection is finished. Unless you have lots of high-resolution species, cards with 12 GB of memory should be fine.</p> <p>We are working on making use of free GPU memory as a substitute for some of the pinned CPU memory. However, multi-particle refinements will likely remain resource-intensive in the near future.</p>"},{"location":"user_guide/m/quick_start_m/#making-sense-of-the-results","title":"Making sense of the results","text":"<p>All refined species maps are contained in the species/[species ID] subfolders inside the population directory. The species IDs are very cryptic to make them unique regardless of the names, but the maps include the species name you provided. The most useful maps are likely the two half1 and half2 half-maps, the filtered and sharpened filtsharp map (equivalent to the output from RELION's post-processing), the denoised map, as well as the local resolution values contained in the localres volume. The current global resolution and B-factor used for sharpening are contained in the .species XML file.</p> <p>If the resolution of your map has far surpassed that of the map you used to prepare the initial mask and you think the latter looks too blobby, you can use e.g. M's denoised map to prepare a new mask using relion_mask_create, and sneak that updated mask into the next refinement iteration by replacing the [species name]_mask.mrc file with it. Please make sure it has the same pixel size as the rest of that species' maps.</p>"},{"location":"user_guide/warp/eer/","title":"EER handling","text":"<p>Rudimentary support for Thermo Fisher Scientific's Electron Event Registration (EER) format is implemented in Warp &amp; M <code>&gt;=1.0.9</code>.  EER supports very fine exposure fractionation, which can be subjected to in silico exposure grouping later when the data are processed.  EER's compression efficiency is similar to TIFF.</p> <p>EER is available as input format in Warp.  When selected, a new setting will appear in the UI: EER frame group.  This determines how many consecutive frames will be summed up without taking into account any alignment when an EER frame series is read.  Set a smaller value if you expect fast motion at the beginning of an exposure, e.g. because you're collecting on a tilted sample.  If the overall number of frames isn't divisible by the group size, the last incomplete group will be dropped.</p> <p>The Exposure setting in Warp refers to the cumulative exposure of 1 group of frames, i.e. you will likely need to adjust it if you change the group size.  Please note that the group size currently can't be changed for M's processing later.  M also doesn't implement any optimizations for finely fractionated data yet, so if you set the group size too small, you might run out of memory.</p> <p>EER files are currently presumed to originate from a Falcon 4 detector, which has a physical size of <code>4096</code>x<code>4096</code> px.  The acquisition software calculates non-integer centroid coordinates for every electron event, which the format preserves in up to 4x super-resolution.  In Warp, the size of the gain reference determines whether the super-resolution information is used. If you provide a 8192x8192 px gain reference, the EER data will be rendered in 2x super-resolution; 16384x16384 px will result in 4x super-resolution; a 4096x4096 px gain reference turns off super-resolution rendering.</p>"},{"location":"user_guide/warp/quick_start_warp_frame_series/","title":"Quick Start: Frame Series","text":"<p>This quick introduction can help you start processing frame series data (2D movies) with Warp right away, without diving into details.</p>"},{"location":"user_guide/warp/quick_start_warp_frame_series/#to-the-microscopes-ready-go","title":"To the microscopes, ready, go!","text":"<p>Load your favorite sample into the microscope and start collecting data. For counting data from K2/3 and Falcon III detectors, we highly recommend saving the movies as gain-uncorrected, compressed TIFF files. This will make sure a typical SPA movie with 40 frames doesn't take up more than 200 MB and you don't need to purchase a new file server every now and then. If you're using SerialEM or other software with native TIFF support, this can be done with a few clicks. If you're using EPU, our Stacker v2 tool will help you.</p> <p>If you don't have access to a microscope right now, grab a data set from EMPIAR, e.g. 10153. This tutorial will use EMPIAR-10153 for all of its screenshots.</p>"},{"location":"user_guide/warp/quick_start_warp_frame_series/#launch-warp-and-get-comfortable","title":"Launch Warp and get comfortable","text":"<p>Once a steady influx of movies is ensured, you can launch Warp. Just go to the installation directory and execute Warp.exe. The first launch can take a bit longer \u2013 please be patient.</p> <p>If you don't see the settings panel on the left side, click the small triangle to expand it. Collapsing the settings panel will merge the Fourier and Real Space tabs \u2013 you may find this mode more convenient for manually screening the processing results.</p> <p></p> <p>If you're a vampire, click the \ud83d\udd04 button in the window bar to change to a dark UI theme. We won't judge \ud83e\udddb</p> <p></p>"},{"location":"user_guide/warp/quick_start_warp_frame_series/#setup","title":"Setup","text":""},{"location":"user_guide/warp/quick_start_warp_frame_series/#input-parameters","title":"Input parameters","text":"<p>First, you need to tell Warp where to look for data, and what basic input parameters to expect. These settings are located in the left part of the window under Input.</p> <p>Click Select folder\u2026 and select the location of your movies. Warp will not look for files recursively in sub-folders, so all files must be located on the top level. Next, click .mrc (the extension may be different if you've already used Warp) to specify the file format. If you're working with a header-less format (or any format Warp doesn't recognize yet), select the DAT option, and specify the frame dimensions, data type and an optional offset at the beginning of the files. Only the .dat extension is supported for the file names, but you can use any header-less format by renaming them.</p> <p>Set the pixel size in the X and Y dimensions to match your raw, unbinned data. If you haven't determined the magnification anisotropy for your microscope, both numbers will be the same. The anisotropy angle specifies the anti-clockwise rotation of this X/Y coordinate system.</p> <p>Especially if you're acquiring in super-resolution mode on a K2, you might want to bin the data before they are processed. We don't think the processing overhead for super-resolution data is worth the small gain in signal, but you are free to experiment \ud83d\ude09 Warp can use any positive rational binning factor. The frames will then be Fourier-cropped to Size / 2^n.</p> <p>If you enter any non-zero electron dose value, frames will be weighted in all operations that produce averages, e.g. aligned movie or particle averages. The weighting is implemented as a B-factor of \u20134\u22c5Dose \u00c5\u00b2. Please don't forget to convert the dose value to the correct units.</p> <p></p> <p>Following the best practice of storing counting data as gain-uncorrected integer values, you need to tell Warp how to perform gain correction on-the-fly. Click Select reference\u2026 and choose an MRC file. Please make sure the gain reference matches the data. In case of EER data, the size of the gain reference also determines the super-resolution \u2013 check the EER page for details. Warp will tell you if the dimensions don't match (e.g. if it needs to be transposed), but it can't detect if the reference is flipped in X or Y. If you're not sure, try processing a movie without motion correction and check whether the average contains a visible gain pattern. Repeat the procedure with different combinations of Flip X/Y axis until the pattern disappears.</p> <p>Some camera sensors have small defective regions that can't be corrected using a gain reference. They won't affect alignments if they're small, but can be annoying, especially in tomography. Warp can use a defect map to fill those regions with the average value of their surroundings. The defect map must have the same dimensions as the gain reference, and contain pixel values = 1 in the defect regions and = 0 everywhere else. The same flip X/Y and transpose operations will apply to the gain reference and defect map. Alternatively, you can have Warp create the defect map image based on a text description of rectangular regions. To do this, click Select defect map, change the file filter to * .txt, and select the text file. In this file, every line should describe a rectangle in the following format: <code>[bottom left corner X] [bottom left corner Y] [width] [height]</code></p> <p>The X and Y coordinates start with 0, not 1. The columns are separated by spaces or tabs. For instance,</p> <p><code>0 3709 3838 1</code> will mask the top-most row of a 3838\u00d73710 px sensor. Once the file is loaded, Warp will generate the defect map image and save it under <code>project directory/defectmap/defects.tif</code> and automatically change the file path. Please check this image to make sure the mask is correct. For future projects using data from the same sensor, you can just reuse this TIFF file.</p>"},{"location":"user_guide/warp/quick_start_warp_frame_series/#ctf-fitting-options","title":"CTF fitting options","text":"<p>The number of parameters for CTF fitting can be scary at first. Good news: You need to set many of them only once for your microscope!</p> <p></p> <ul> <li> <p>Window: Specifies the size of the power spectrum. If you expect only low defocus   values or need highly localized defocus values, leave the window small, e.g., 512 px.</p> </li> <li> <p>Range: Specifies the spatial frequencies used for fitting. It is usually best to   ignore the lowest frequencies. If you specify a defocus model without spatial   resolution (see next section), you can set the maximum range to 1.0. If you are   fitting a highly resolved model, keep the maximum value lower to prevent overfitting.</p> </li> <li> <p>Use Movie Sum: In some cases (e.g., very low dose images) the fitting will work   better if the power spectrum is created from the aligned movie average instead of the   per-frame power spectra \u2013 check this option to do that.</p> </li> <li> <p>Voltage and C<sub>S</sub>: Values specific to your microscope model. A Titan Krios   is usually operated at 300 kV, and C<sub>S</sub> is 2.7 mm in most modes.</p> </li> <li> <p>C<sub>C</sub>, Illumination Aperture, and \u0394E: Currently not used, but might become   relevant in future versions of Warp. Just leave the defaults for now.</p> </li> <li> <p>Amplitude: Defines the fraction of amplitude contrast in the CTF. Commonly used   values for cryo data are 0.07 and 0.10, while negative stain data are often fitted   with 0.20.</p> </li> <li> <p>Defocus spread: Defines the range of defocus values for the initial exhaustive   search. Set both values to match the range specified in your acquisition software with   a bit of a margin.</p> </li> <li> <p>Phase Shift: When dealing with data acquired with a phase plate, check this to fit   that parameter as well.</p> </li> <li> <p>Mode Ice Ring: An experimental feature that will attempt to model the CTF around   the 3.6 \u00c5 amorphous ice ring separately from the rest of the power spectrum.</p> </li> </ul> <p>Range parameters optimization: The easiest way to optimize them for a new data set is to switch to the Fourier Space tab and click Process Only This Item's CTF. This will skip all the other processing steps and just fit the CTF for the currently selected movie. The fitting range is visualized as a grey rectangle in the 1D power spectrum plot.</p> <p></p> <p></p> <p>CTF Model Resolution: Defined further below in the Models panel. The first two values define the spatial resolution, i.e., how locally the defocus will be estimated. 5x5 is usually a good value for a 4K micrograph at 1.0\u20131.3 \u00c5/px. The third parameter defines the temporal resolution. Please note that a temporal resolution higher than 1 leads to a vastly increased memory footprint during processing, while probably not improving the final resolution in most cases.</p>"},{"location":"user_guide/warp/quick_start_warp_frame_series/#motion-fitting-options","title":"Motion fitting options","text":"<ul> <li> <p>Global and local motion estimation: Considers the specified range of spatial   frequencies and weights their importance according to the B-factor. The default range   of 0.05\u20130.25 is usually ok for data with 1.00\u20131.35 \u00c5/px. The more negative the   B-factor, the less the higher spatial frequencies will be considered.</p> </li> <li> <p>Motion model parameters: The first two parameters describe the spatial resolution,   and the third describes the temporal resolution. The spatial resolution will be   considered in fitting the local beam-induced motion, while the full specified temporal   resolution will be used for fitting the global motion.</p> </li> </ul>"},{"location":"user_guide/warp/quick_start_warp_frame_series/#particle-picking-options","title":"Particle picking options","text":"<p>Warp employs BoxNet, a deep convolutional neural network, for particle picking and maintains a central database of training data that any user can contribute to. As new examples are added, the BoxNet model is constantly re-trained using all available data. In addition to this, BoxNet can be re-trained locally on any data you would like to pick more specifically. Thus, while the concept of sample-specific templates does not exist with BoxNet, you can maintain multiple pre-trained models for different samples. More information on how to re-train BoxNet can be found here.</p> <p></p> <p>Click Select BoxNet model... to open a list of available models. All models contained in [WarpInstallationDirectory]/boxnet2models/ are enumerated here. If you just installed Warp recently, the list of official BoxNet models pre-trained only on the public dataset should be up-to-date. If your installation is a bit older, click Browse Public Repository to download the latest versions. After downloading new models, please re-open the model selection window to see the changes. Once a model is selected, click Use ( or follow the re-training guide).</p> <p>There are 2 types of official BoxNet models: One follows the BoxNet2_ naming scheme and can only distinguish between background and particles. Another is called BoxNet2Mask_ and can distinguish between background, particles, and high-contrast artifacts, e.g., ethane drops. Knowing the exact location of such artifacts allows dismissing particles located too close to them.</p> <p></p> <p>The Diameter setting controls how close two particles can be together before the particle with lower probability is dismissed from the picks. The Data Type determines whether the sign of the data is flipped before picking (negative stain), or not (cryo). A Minimum Score threshold is applied to BoxNet's predictions. When using a model specifically pre-trained on the current protein species, the score can be typically left at its default value of 0.95. Picking new species with the generic version can sometimes require lower threshold values to pick up everything.</p> <p>If you're using a BoxNet version that can create masks, you can enforce a Minimum Distance between particles borders (as defined by their diameter) and \ud83d\udce9.</p> <p>The picked particles can be extracted immediately after the picking, which is especially useful for real-time processing. For that, the Box Size must be set \u2013 ca. 150 % of the particle diameter is recommended to avoid interpolation artifacts later. The pixel size is fixed to that used for the entire pre-processing pipeline. If you want to extract particles with a different pixel size, you can do so later using one of the Task Dialogs. Cryo data need to be inverted upon extraction. For SPA packages that require particles to be pre-normalized, e.g., RELION, the diameter used for picking will also be used for * background normalization*.</p>"},{"location":"user_guide/warp/quick_start_warp_frame_series/#output-options","title":"Output options","text":"<p>The first few frames in a movie suffer especially badly from beam-induced motion and can usually be discarded by adjusting the output frame range. This setting will also be respected in all other operations that deal with frames, e.g., particle extraction.</p> <p>In addition to extracted particles, there are 2 output types for 2D movies:</p> <ul> <li>Average: You will almost always want to produce an average to inspect the   micrographs visually. You can also use other tools to extract particles from them if   you don't want to use Warp for that.</li> <li>Aligned Stack: Some workflows \u2013 RELION pre-3.0 particle polishing in particular \u2013   rely on pre-aligned movies as input. Please note that aligned movies are very large   and will create significant storage and processing overhead. To save some space, you   can collapse groups of consecutive frames into one.</li> </ul>"},{"location":"user_guide/warp/quick_start_warp_frame_series/#processing","title":"Processing","text":""},{"location":"user_guide/warp/quick_start_warp_frame_series/#start-processing","title":"Start processing","text":"<p>You're almost ready to hit that big button! We just need to make sure that all of the GPUs in your system are as ready as you are. Warp will try to use all CUDA-capable Nvidia GPUs available, which might not be a good idea if you have several models with different memory capacity. They are all listed in the window bar together with checkboxes to deselect them. Deselected GPUs will not be used for on-the-fly processing. version's memory requirements.</p> <p>Now hit it! Warp won't stop processing until you manually press Stop Processing. All processing settings and task dialogs are frozen while Warp is in processing mode, but you can still inspect the results, edit the particle positions, and change any filter thresholds.</p> <p></p>"},{"location":"user_guide/warp/quick_start_warp_frame_series/#processing-status","title":"Processing status","text":"<p>As movies are processed, they change their status. Every movie is initially marked as * unprocessed. Once it has passed through the entire pipeline, it is considered * processed. If you change any processing settings, previously processed items will be marked as outdated, i.e., in need of re-processing. If a processed item's quality criteria don't match the current filter thresholds (see section below), it is labeled * *filtered out. Finally, if you deselect an item manually in the navigation bar, it will be colored as deselected. This color scheme is used throughout the navigation bar and the overview tab, except in the astigmatism plot. There, color reflects an item's coordinate on the time axis, going from old to new. Whenever unprocessed or outdated items are present in the current input folder and processing is activated, Warp will send them through the pipeline in alphabetical order.</p>"},{"location":"user_guide/warp/quick_start_warp_frame_series/#inspecting-results","title":"Inspecting results","text":"<p>Once the processing has started, it is best to collapse the settings panel as shown in the beginning of this guide. This will make more room for the overview plots, and merge the Fourier and Real Space tabs so you don't have to constantly switch between them.</p> <p></p> <p>The Overview tab features plots for all estimated parameters. If the dot spacing becomes too dense, use the mouse wheel to zoom into the plots. Each plot features a small histogram on its left side. Click any of the dots to switch to the Fourier &amp; Real Space tab and inspect the corresponding item in more detail.</p> <p></p> <p>There, you will find the Power Spectrum and its CTF Fit, an Average of the aligned movie and the corresponding Local Motion Tracks, the picked Particles and the automatically painted Mask, and the local Defocus Gradient. Some of these elements are hidden by default so they don't clutter up your view.</p> <p>If your GPU has 8+ GB of memory, you can enable Denoising to see more details in the noisy images. Warp comes with a default pre-trained denoising model, but it will likely not be as good as one trained on your specific data set. To retrain the model on your data using the noise2noise method, wait until at least 20\u201330 movies have been processed (up to 128 can be used). Then stop the processing to free up GPU resources. Now click Retrain on this data set next to the Denoise checkbox and proceed through the dialogs. Once training is finished, you can activate the denoising if it isn't active yet, and proceed with the processing. In very rare cases it may be necessary to restart Warp after retraining to avoid crashes. The retrained denoising model will be saved in the project directory and used automatically for this project in the future.</p> <p>Alternatively, you can enable the Deconvolution Filter and adjust it on-the-fly to give your micrographs more contrast. If the latter is too much, you may need to adjust the Intensity Range slider.</p> <p>While in the Fourier &amp; Real Space tab, you can quickly go through your micrographs using the \u2b05\ufe0f and \u27a1\ufe0f keys on the keyboard.</p>"},{"location":"user_guide/warp/quick_start_warp_frame_series/#dealing-with","title":"Dealing with \ud83d\udca9","text":"<p>Even a perfect grid will produce a bad micrograph every now and then. Wouldn't it be great to get rid of them in an objective and automated way?</p> <p></p> <p></p> <p>Some of the parameters established during processing are likely correlated with the data quality: Defocus, astigmatism, phase shift, estimated resolution, average intra-frame motion, number of particles, and the percentage of masked micrograph area. Using the sliders above the plots in the Overview tab, you can define Filter Thresholds for all of them. Whenever you change a threshold, Warp instantly re-applies it to all items. The Astigmatism filter is special because it considers the distance of a movie's astigmatism to the entire data set's mean astigmatism, normalized by its standard deviation. Thus, whenever an item's astigmatism value changes, the entire filter is re-evaluated without an explicit change in the threshold.</p> <p></p> <p>In some rare cases, you may want to overrule the automatic filtering. Each item has a * Manual Selection flag in addition to the filtering. To edit it, switch to the Fourier or Real Space tab. You will find the Navigation Bar at the bottom of the window. There, the currently selected item has a check box next to its name. This check box has 3 different states, which are cycled through by repeatedly clicking it: [\u2013] ( default) leaves the inclusion/exclusion to the automatic filters; [\u2713] forces inclusion regardless of filters; [   ] forces exclusion regardless of filters. Alternatively, you can press F* on the keyboard to change the current item's selection.</p>"},{"location":"user_guide/warp/quick_start_warp_frame_series/#plugging-warp-into-other-tools","title":"\ud83d\udd0c Plugging Warp into other tools","text":"<p>Now that Warp is running and providing you with lots of insights into your ongoing data collection, what's next?</p> <p>If you set up Warp to pick particles on-the-fly using BoxNet, it will create and continuously update two files in the input folder: allparticles_BoxNetName.star and goodparticles_BoxNetName.star. The former contains absolutely all particles picking with the respective BoxNet model so far, while the latter only contains particles from micrographs that match the current filter thresholds. Whenever you change the filter parameters, the goodparticles file will be updated the next time Warp is done processing a movie.</p> <p>cryoSPARC is our favorite tool for processing Warp's on-the-fly results because of its speed and transparent handling of constantly changing data sources.</p> <p></p> <p>Create a new data source for your project and select <code>goodparticles_BoxNetName.star</code> in Warp's input folder as cryoSPARC's Meta Data File. Set the other data set parameters as usual. That's it! Now, whenever you create a new job with the full data source as input (i.e., not using the output of a previous job as input), cryoSPARC will read the most current version of the STAR file, load all new particles into its local cache, and use them for processing.</p> <p></p> <p>At the beginning of a data collection session, we like to start 2D Classification jobs every 30 minutes. If the data are good, well-defined classes should appear soon. After a few hours, we employ Ab Initio jobs to bootstrap the 3D classification and, once we have good classes, 3D Refinement. This way, it usually becomes clear after only a few hours of data collection if it's worth continuing, or if a different sample should be loaded into the microscope instead.</p> <p>Warp's STAR files are also fully compatible with RELION. While its current processing speed makes for a less responsive on-the-fly workflow, we usually employ it once data collection is over to classify and refine the data further.</p>"},{"location":"user_guide/warp/quick_start_warp_tilt_series/","title":"Quick Start: Tilt Series","text":"<p>Tilt series pre-processing in Warp will allow you to reach higher resolution for your sub-tomogram averages. However, unlike the pipeline for 2D data, the tilt series pipeline still has a few gaps. You will have to switch to IMOD to perform the initial tilt series alignment (using patch tracking or gold fiducials). There is also no BoxNet-enabled on-the-fly particle picking yet, and you will have to use a rather slow template matching routine in offline mode. Metadata import is supported only for SerialEM currently. We intend to address these shortcomings in the near future.</p> <p>We will use data from EMPIAR-10164 in the screenshots below \u2013 in particular, the 5 tomograms used in Turonova et al. 2017.</p>"},{"location":"user_guide/warp/quick_start_warp_tilt_series/#tilt-movie-pre-processing","title":"Tilt movie pre-processing","text":"<p>The first step towards tilt series pre-processing in Warp is pre-processing the individual tilt movies in 2D mode. If you\u2019re not familiar with that procedure or Warp\u2019s basic interface features yet, please follow the 2D quick start guide. Here are some important differences to traditional 2D movie processing for this step:</p> <ul> <li>The motion model shouldn\u2019t have spatial resolution, as there is usually not enough   signal in a single tilt movie average for such fine alignment. Thus, the grid   resolution will be 1x1xN. A good value for N is the number of frames in the shortest   movie in case you\u2019re using a collection scheme that increases the dose (and thus the   movie duration) at higher tilts. If you\u2019re fractionating the dose in very fine steps   and collecting with a small pixel size, N can be lower than the frame count to avoid   overfitting.</li> <li>If you already processed the data with a different pipeline and don\u2019t want to repeat   the tilt series alignments because the raw 2D movie alignments would change (e.g.,   compared to MotionCor2), you can also reuse those pre-aligned averages. Just   pre-process them instead of the movies. Obviously, the movement processing can be   turned off. Warp will estimate the CTF and generate averages, which are an exact copy   of the input images. This will feel very redundant, but the pipeline was written with   movies in mind and doesn\u2019t have a special case for single-frame images.</li> <li>The CTF can usually be estimated well with a 2x2x1 defocus grid. You can use these   estimates to monitor data collection. However, the values will be re-estimated later   during tilt series pre-processing using a more robust model. Because of the low amount   of signal per tilt movie, it might help to check Use Movie Sum.</li> <li>Particle positions obtained with BoxNet won\u2019t be considered later. However, the masks   will be. In tilt series mode, those are assumed to cover gold beads and other   high-contrast artifacts, and will be used to fill image areas with uncorrelated noise.   You can quickly retrain BoxNet to mask out   gold beads and not pick any particles. We would like to offer a pre-trained model for   this purpose, but currently lack the training data. If you think such a model would be   useful, please   consider contributing training data!</li> </ul> <p></p>"},{"location":"user_guide/warp/quick_start_warp_tilt_series/#export-tilt-series-stacks-for-imod","title":"Export tilt series stacks for IMOD","text":"<p>IMOD\u2019s etomo requires each tilt series to be assembled in a single MRC stack. You can use Warp to combine the previously generated tilt movie averages into such stacks.</p> <p>Switch Warp to tilt series mode by selecting TomoSTAR as the Input format. We haven\u2019t created any TomoSTAR files yet, but this mode will allow us to generate the data necessary for tilt series alignment in etomo, which will eventually allow us to create TomoSTAR files.</p> <p></p> <p>Once in tilt series mode, the Overview tab will contain the Import tilt series from IMOD button. Click it to bring up the task dialog. Specify the folders containing the mdoc files generated by SerialEM, and the original tilt movies. If there are multiple mdoc files per tilt series (e.g. \"plus\" and \"minus\" after bi-directional collection), you can specify several suffixes. Once these settings are set, all tilt series should appear with the correct number of tilts in the list on the right. Individual series can be deselected using the checkboxes next to their names. Click the Create stacks for IMOD button to generate the stacks. This will create an imod folder in the current project directory, and place each stack in a sub-folder named after the respective tilt series. You can now execute etomo in each of these folders to perform alignments. Please note that it isn't necessary to generate an aligned stack or reconstruct tomograms in etomo, other than for diagnostic purposes. You can use manual deselection in Warp's 2D pre-processing mode to remove individual tilt images from the stack. Please remember to reflect these changes when setting up the project in etomo.</p> <p>You can also generate TomoSTAR files without any alignments at this point by clicking the Import button. Please refer to the next section for information on how to specify the electron dose.</p> <p></p>"},{"location":"user_guide/warp/quick_start_warp_tilt_series/#create-tomostar-files-from-imods-results","title":"Create TomoSTAR files from IMOD's results","text":"<p>If you closed the Import tilt series from IMOD dialog from the previous section, open it again. Specify the mdoc and original tilt movie folders, and the * suffixes (if applicable) as before. For the Root folder with IMOD processing results, select the imod subfolder created previously. If you didn't use Warp to set up the folder structure as suggested in the previous section, make sure the alignment results are located in [project folder]/imod/[tilt series name]/. Warp will try to find the xf and taSolution.log files there. Please note that IMOD's pre-tilt correction (\"Tomogram positioning\" tab in etomo) is currently not supported and shouldn't be used if you want the results to match between IMOD and Warp. If everything has been parsed correctly, the Aligned* checkboxes should become checked.</p> <p>SUPER IMPORTANT HANDEDNESS NOTE: Warp has a different convention for tilt angles and handedness compared to IMOD. By default, the tilt angles will be multiplied by -1 upon import to match IMOD's 3D reconstruction handedness. You can turn off this behavior by checking Don't invert tilt angles. Now that the map handedness is correct, there is still the defocus handedness to take care of. Although SerialEM is usually calibrated to produce the correct map handedness in IMOD's 3D reconstructions, the defocus convention has about a 50:50 chance of being wrong across labs in our experience. Processing data with the wrong handedness calibration will limit the resolution achievable for your sub-tomogram averages. That would be a real pity! Luckily, Warp includes an easy way to check if the calibration is wrong: Estimate the CTF for the raw tilt movies with a 2\u00d72 spatial resolution, then initialize and import the tilt series as described in this guide, estimate the CTF for the entire tilt series, and click Check tilt handedness in the Fourier Space tab. A dialog will appear to tell you the result and its certainty. -1 means certainly wrong, +1 means certainly correct. Values closer to 0 may arise because the raw tilt movie CTF estimates were off due to weak signal. If the value is too close to 0, you may want to try several tilt series and average the result to be sure. If it turns out your defocus handedness is wrong, Warp will offer you to flip the angles used for defocus calculation. This will change the AreAnglesInverted field in the tilt series XML metadata. It is best to do this check and possible flipping before you process the data any further.</p> <p></p> <p>Specify the same Pixel size you used in IMOD. Warp will use it to convert the shifts to \u00c5ngstr\u00f6m. For the electron dose, there are two options: SerialEM, when calibrated accordingly, can store the dose values in the original mdoc files. If the calibration is off or hasn't been done at all, you can specify a non-zero value in the Default dose per tilt field. There is currently no option to conveniently specify varying dose values. In case of dose-symmetric collection, it is usually OK to just use the per-tilt dose of the very first tilt images for all tilts, since the higher tilts won't contribute much information to high-resolution 3D averages anyway. If you absolutely need to specify varying dose values, you will have to edit the wrpDose column in the TomoSTAR files later.</p> <p>That's it! Click Import to create the files and start processing them in Warp.</p> <p></p>"},{"location":"user_guide/warp/quick_start_warp_tilt_series/#tilt-series-pre-processing","title":"Tilt series pre-processing","text":"<p>You will notice the Input section gained a new parameter: Unbinned tomogram dimensions. The X and Y dimensions are usually similar to the input image size. Note that for non-square sensors like the K3 the dimensions should reflect the sensor shape if you don't want to lose data. However, the tomographic volume and raw image coordinate systems are related to each other through the tilt axis angle. Often, the tilt axis is close to the X axis in the raw images, while in the tomogram it is always assumed to be aligned with the Y axis. Thus, if the raw image dimensions are 6000x4000 and the tilt axis angle is around 90\u00b0 or 270\u00b0, the tomogram dimensions should be 4000x6000. The Z dimension depends on the sample thickness. You might have to do a few test reconstructions (in Warp or IMOD) to figure out the right value. Ideally, the tomogram should be thicker than the sample to allow for artifact-free template matching at its borders. Choose these dimensions wisely: Once things like particle positions have been established, changing the dimensions will invalidate those positions and will need to either adjust the values by hand or start from scratch.</p> <p>The Bin parameter has a somewhat different use in Warp compared to IMOD. First, it is defined as an exponent, i.e. downsampling factor = 2^binning (the UI will tell you the result), while in IMOD it is directly the downsampling factor. Second, there are multiple places where binning can be set. The value defined in the Input section will be used when loading the data, i.e. this is the maximum resolution any subsequent operations on the data will be able to use. However, task dialogs like Tomogram reconstruction or Sub-tomogram export allow to set their own target pixel size, which will bin the data additionally if it is larger (and it can't be smaller) than the initial binned pixel size. Thus, you should only set the initial **Bin ** parameter if you know that you will never need to go to a lower pixel size \u2013 for example, if you start with super-resolution data that need to be binned once to get to the physical pixel size. Changing this value later will invalidate every already pre-processed item.</p> <p>The only pre-processing operation implemented for tilt series at the moment is CTF estimation. Warp will estimate the defocus and astigmatism for the entire tilt series while taking the tilt angles as constraints into account. The settings are the same as in the 2D case, except for a lack of model resolution. Since all the information about the Z position of objects in the tomogram will come from the tomogram itself, only a global defocus offset is needed for each tilt. Additionally, because the sample rarely lies flat in the focal plane, a global pre-tilt orientation is fitted for the entire tilt series.</p> <p>Once all items have been pre-processed, the quality filters work the same way they do in 2D mode. There is currently no real space view implemented for tilt series data \u2013 the Fourier space tab is the only place where you will find useful per-item information.</p>"},{"location":"user_guide/warp/boxnet/retraining/","title":"Re-Training","text":"<p>BoxNet hasn't seen every sample (yet). While its out-of-the-box performance is better than other unbiased and template-based methods in most cases, it probably isn't as good as manual picking. Good news: You can teach it to be better! Here is how:</p> <p>First, pick some micrographs with one of the generic BoxNets. Depending on particle density and pixel size, anywhere between 3 and 20 micrographs is a good start.</p> <p>Go through the results manually in the Real Space View tab and remove False Positives or add New Particles using the mouse. When you remove a particle, it is automatically saved in a separate [Micrograph name]_[suffix]_falsepositives.star file. You can use these positions to up-weight certain areas later. If you hold Shift ** while removing particles, they won\u2019t be added to the falsepositives file. When adding new particles, please make sure they are centered well**. If some of the automatically picked particles are off-center, it is best to improve their positions by dragging them with the mouse instead of removing and recreating them.</p> <p>Wrong labels can be tolerated to a certain degree, but the accuracy of your model will absolutely depend on the quality of the training data you provide. Try to make sure each micrograph is picked completely, since everything not labeled as a particle is labeled as background during training.</p> <p>If you intend to train a BoxNet that also creates masks, it is best to already use it for the initial picking. In addition to cleaning up the particle positions, you will also have to manually paint the masks where needed.</p> <p>If you clean up only a fraction of the picked items, you need to copy the corresponding STAR files to a separate folder \u2013 otherwise, all picked items will be used for training. All picking results are saved in [Input folder]/matching. It doesn\u2019t matter where you put the separate folder, but it is convenient to make it [Input folder] /matching/training.</p> <p></p> <p>Now go to the BoxNet selection menu, select the model used for the initial picking, and click Retrain.</p> <p>Give the new model a unique name. If you\u2019re using a masking BoxNet, it\u2019s best to keep a \u201cMask\u201d in the name. Following the machine learning community\u2019s tradition, we like to name the new models [Something]Net. Just don\u2019t keep the name identical to the previous model, and don\u2019t use special characters.</p> <p>For the Positive Examples, select one of the cleaned up STAR files. Warp will automatically determine its suffix and match all the other files. The same goes for * Extra Important and Uncertain* locations. There won\u2019t be much value in up- or down-weighting locations the first time you re-train a generic BoxNet since you don\u2019t know yet which areas might be causing trouble. Consider using Extra Important if the first re-training doesn\u2019t provide good results.</p> <p>The Particle Diameter will determine the area around each particle\u2019s center that is labeled as particle for training. If your sample is highly heterogeneous in size, don\u2019t worry \u2013 this value doesn\u2019t need to be exact.</p> <p>Using the Public Data Set for re-training will dilute your new examples in a 1:1 ratio with examples contained in [Warp directory]/boxnet2training. This will prevent overfitting BoxNet on very few examples and is recommended. You may want to visit the training data repository to download the latest version.</p> <p>To Train Masking, it is highly recommended to re-train a BoxNet with masking ability (i.e., one containing \u201cMask\u201d in its name). Vice versa, re-training a masking BoxNet without providing masks for all training micrographs will lead to bad results. The masks will be automatically taken from [Input folder]/mask.</p> <p></p> <p>Once everything is set up, click Start Training. Warp will first prepare the new examples, load the old examples from disk (if it crashes at this point due to memory shortage, try removing some of the old examples from [Warp directory] /boxnet2training), and finally commence training.</p> <p>During training, two curves (one if you don\u2019t use the public data set) are displayed. The Loss \u2013 New Examples shows the current model\u2019s performance on the new examples, and Loss \u2013 Old Examples shows the same model\u2019s performance on the public data set. Over time, the loss metric for the new examples should decrease and approach that for the old examples. Meanwhile, the loss for the old examples should oscillate around the same level. It is very well possible that the loss for the new examples never reaches the old examples benchmark. This depends highly on the difficulty of your data and the quality of the labels you create (you may find the new model labels the mislabeled positions correctly, but this counts toward the loss during training). The difference between the start and end points of the new examples curve is more indicative of how much better the re-trained BoxNet model will perform on the new data.</p> <p>Once the training is finished, click Close. The new model should now be listed next to the old ones, and you can select it. Test the performance on some micrographs that haven\u2019t been used in training. If you still think it could do better, add more micrographs to the training data set and re-train again. You may also want to look into which particles the model doesn\u2019t remember, and up-weight them during training if you think they are indeed true positives.</p>"},{"location":"user_guide/warp/boxnet/retraining/#submitting-data-to-the-public-repository","title":"Submitting data to the public repository","text":"<p>Please consider contributing your training data to the public repository! Doing so will benefit all BoxNet users in the long term, hopefully bringing the out-of-the-box performance to human-like levels. You can either directly submit the data used for training your own model \u2013 it is saved as a TIFF file under [Input folder] /boxnet2training \u2013 or use the Export BoxNet Examples task dialog in the Overview tab, which has a very similar interface to the re-training dialog. Read the guidelines on the Data Upload Page and submit your training data!</p>"},{"location":"user_guide/warp/boxnet/using/","title":"Using Warp with BoxNet","text":"<p>Warp employs BoxNet, a deep convolutional neural network, for particle picking and maintains a central database of training data that any user can contribute to. As new examples are added, the BoxNet model is constantly re-trained using all available data. In addition to this, BoxNet can be re-trained locally on any data you would like to pick more specifically. Thus, while the concept of sample-specific templates does not exist with BoxNet, you can maintain multiple pre-trained models for different samples. More information on how to re-train BoxNet can be found here.</p> <p></p> <p>Click Select BoxNet model... to open a list of available models. All models contained in <code>WarpInstallationDirectory/boxnet2models/*</code> are enumerated here. If you just installed Warp recently, the list of official BoxNet models pre-trained only on the public dataset should be up-to-date. If your installation is a bit older, click Browse Public Repository to download the latest versions. After downloading new models, please re-open the model selection window to see the changes. Once a model is selected, click Use ( or follow the re-training guide.</p> <p>There are 2 types of official BoxNet models: One follows the BoxNet2_* naming scheme and can only distinguish between background and particles. Another is called * BoxNet2Mask_** and can distinguish between background, particles, and high-contrast artifacts, e.g., ethane drops. Knowing the exact location of such artifacts allows to dismiss particles located too close to them.</p> <p></p> <p>The Diameter setting controls how close two particles can be together before the particle with lower probability is dismissed from the picks. The Data Type determines whether the sign of the data is flipped before picking (negative stain), or not (cryo). A Minimum Score threshold is applied to BoxNet\u2019s predictions. When using a model specifically pre-trained on the current protein species, the score can be typically left at its default value of 0.95. Picking new species with the generic version can sometimes require lower threshold values to pick up everything.</p> <p>If you\u2019re using a BoxNet version that can create masks, you can enforce a Minimum Distance between particles borders (as defined by their diameter) and \ud83d\udca9.</p> <p>The picked particles can be extracted immediately after the picking, which is especially useful for real-time processing. For that, the Box Size must be set \u2013 ca. 150% of the particle diameter is recommended to avoid interpolation artifacts later. The pixel size is fixed to that used for the entire pre-processing pipeline. If you want to extract particles with a different pixel size, you can do so later using one of the Task Dialogs. Cryo data need to be inverted upon extraction. For SPA packages that require particles to be pre-normalized, e.g., RELION, the diameter used for picking will also be used for * background normalization*.</p>"},{"location":"user_guide/warptools/quick_start_warptools_frame_series/","title":"Quick Start: Frame Series","text":""},{"location":"user_guide/warptools/quick_start_warptools_tilt_series/","title":"Quick Start: Tilt Series","text":""}]}